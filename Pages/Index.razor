@page "/"
@layout NoHeaderLayout
@inject ICookieStoreAPIService cookieStore;
@inject IUserSession session;
@inject IConfiguration configuration;

<PageTitle>Välkommen</PageTitle>

<div class="container">
    <div class="row vh-100">
        <div class="d-flex flex-column flex-lg-row align-items-center justify-content-center">
            <div class="d-flex col-xl-6 order-xl-2 justify-content-center mb-5">
                <img src="/images/AddPro_Icon.png"
                     alt="AddPro Logo"
                     class="img-fluid" />
            </div>

            <div class="text-center col-xl-6">
                <h1 class="mb-3 fw-bold mb-md-5">
                    Speak<span class="text-danger">BOT</span>
                </h1>
                <p class="mb-3 fs-4 mb-md-5">
                    Turn your
                    <span class="fw-bold">questions</span> in to
                    FACTS by
                    <span class="fw-bold">shouting</span> or
                    <span class="fw-bold">hysterically</span>
                    hammer away at the
                    <span class="fw-bold">keyboard</span> for a
                    quality
                    <span class="fs-3 fw-bold">AI</span>
                    response!
                </p>
                @if (isLogged)
                {
                    <a type="button"
                       href="/menu"
                       class="btn btn-warning btn-lg px-4 me-md-2 w-75 mt-4 m-auto fw-bold">
                        Go explore with AI &rarr;
                    </a>
                }
                else
                {
                    <a type="button"
                       href="/login"
                       class="btn btn-warning btn-lg px-4 me-md-2 w-75 mt-4 m-auto fw-bold">
                        Sign In &rarr;
                    </a>
                }
            </div>
        </div>
    </div>
</div>

@code{
    private bool isLogged;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var cookieUsername = await cookieStore.GetAsync("Username") ?? null!;

            if (cookieUsername == null) return;

            var cookieUserId = await cookieStore.GetAsync("UserId");

            session.User.Username = cookieUsername.Value;
            session.User.Id = Guid.Parse(cookieUserId.Value);

            isLogged = session.IsLoggedIn();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An Error has occured: {ex}");
        }
    }
}
