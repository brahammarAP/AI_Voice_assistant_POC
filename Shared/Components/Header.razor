@inject IUserSession session;
@inject IJSRuntime JSRuntime;
@inject NavigationManager navManager;
@inject INavigationServices navServices;
@inject IMessageService MessageService;
@implements IDisposable;

<header class="header-section my-3 p-3 mx-xxl-5 px-xxl-5" style="background-color: #f0f0f0">
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex justify-content-center align-items-center">
            <div class="flex-column flex-fill">
                <div class="fw-semibold text-black">Hello,</div>
                <div class="fs-1 fw-semibold text-danger">@username</div>
            </div>
        </div>
        <div class="d-flex">
            @if (!IsMenuPage)
            {
                <div>
                    <a href="/menu" class="btn rounded-circle border-0 text-warning bg-white pb-2 me-2" alt="Menu Page" @onclick=IsNotChatSettings>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-house-fill" viewBox="0 0 16 16">
                        <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L8 2.207l6.646 6.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.707 1.5Z" />
                        <path d="m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6Z" />
                    </svg>
                </a>
            </div>
            }
            @if (navServices.GetChatSettingsStatus())
            {
                <div class="go-back-container">
                    <button class="btn btn-secondary rounded-circle border-0 text-danger bg-white pb-2"
                            type="button"
                    @onclick="GoBack">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
                        </svg>
                    </button>
                </div>
            }
            else
            {
            <div class="dropdown">
                <button class="btn btn-secondary rounded-circle border-0 text-danger bg-white pb-2"
                        type="button"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         width="16"
                         height="16"
                         fill="currentColor"
                         class="bi bi-three-dots"
                         viewBox="0 0 16 16">
                        <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z" />
                    </svg>
                </button>
                <ul class="dropdown-menu mt-2 me-3">
                    @* <li>
                        <a class="dropdown-item" href="/usersettings">Settings</a>
                    </li> *@

                    <SignOutButton />
                </ul>
            </div>
            }
        </div>
    </div>
</header>

@code {
    private string username;
    public bool IsChatSettings { get; set; }
    private bool IsMenuPage => navManager.Uri.EndsWith("/menu");

    protected override async Task OnInitializedAsync()
    {
        username = session.User.Username;
        IsChatSettings = navServices.GetChatSettingsStatus();

        if (session.User.Username == null)
        {
            if (await session.IsLoggedIn())
                username = session.User.Username;
        }

        MessageService.OnDeleteChat += IsNotChatSettings;
    }

    void GoToMenu()
    {
        session.CurrentChat = new ChatHistory();
        navManager.NavigateTo("/menu");
        IsNotChatSettings();
    }

    void IsNotChatSettings()
    {
        navServices.ToggleChatSettings(false);

        StateHasChanged();
    }

    private async Task GoBack()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
        IsNotChatSettings();
    }

    public void Dispose()
    {
        MessageService.OnDeleteChat -= IsNotChatSettings;
    }
}